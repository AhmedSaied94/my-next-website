name: CI/CD AWS
# deploy
on:
  push:
    branches: [ amazon ]

env:
  DOMAIN: ahmedsaied.info
  ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
  BUILD_ID: ${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}

jobs:
  build_dist:
    name: Build And Deploy
    if: github.ref == 'refs/heads/amazon'
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [17.x]
    
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install
            
      - name: Get current date
        run: echo "name=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
            
      - name: Prepare .env
        run: |
            echo "DOMAIN=${{ env.DOMAIN }}" >> .env
            echo "BUILD_ID=${{ env.BUILD_ID }}" >> .env
            echo "NEXT_APP_VERSION=${{ env.BUILD_ID }} - ${{ steps.date.outputs.date }}" >> .env
            echo "NEXT_APP_ENV_NAME=LIVE" >> .env
            
      - name: Build
        run: npm run build

      - name: Configure SSH
        run: |
            mkdir -p ~/.ssh/
            echo "${{ secrets.SSH_KEY }}" > ~/.ssh/live.pem
            chmod 600 ~/.ssh/live.pem
            cat >> ~/.ssh/config << END
            Host staging
                HostName ${{ secrets.INSTANCE_IP }}
                User ${{ secrets.INSTANCE_USER }}
                IdentityFile ~/.ssh/live.pem
                StrictHostKeyChecking no
            END

        env:
            SSH_USER: ${{ secrets.INSTANCE_USER }}
            SSH_HOST: ${{ secrets.INSTANCE_IP }}
            SSH_KEY: ${{ secrets.SSH_KEY }}


      - name: Show content of working directory
        working-directory: ./
        run: ls -la

      - name: Deploy
        working-directory: ./
        env:
            SSH_AUTH_SOCK: /tmp/ssh_agent.sock 
        run: |
            scp -i ~/.ssh/live.pem -o StrictHostKeyChecking=no -r ./next ${{ secrets.INSTANCE_USER }}@${{ secrets.INSTANCE_IP }}:/home/${{ secrets.INSTANCE_USER }}/my_website/my-next-website
            ssh -i ~/.ssh/live.pem -o StrictHostKeyChecking=no ${{ secrets.INSTANCE_USER }}@${{ secrets.INSTANCE_IP }} << "ENDSSH"
                cd /home/${{ secrets.INSTANCE_USER }}/my_website/my-next-website
                pm2 stop all
                pm2 start npm --name "my-next-website" -- start
                pm2 startup
                pm2 save
            END


